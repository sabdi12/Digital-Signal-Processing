function [E,X2,RECON,SYNTH] = LPC(X1,BLOCKS,E1)% [E,X2,RECON,SYNTH] = LPC(X1,BLOCKS,E1)% Inputs:%       X1:     original speech signal%%       BLOCKS: # of full 20ms segments in original speech signal% 		(sampled at 8 kHz)%%       E1:     periodic impulse train excitation of pitch period P.%               P does not appear in the program.  It is used when you generate%               E1. P should be in the range 50-300Hz%% Outputs:%       E:      prediction error signal%%       X2:     predicted speech%%       RECON:  reconstructed speech using prediction error%%       SYNTH:  synthesized speech using excitation vector%% In this Lab, you need to modify this file to generate E, Recon, and% Synth.  X2 is generated as an example.%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%       ADDITIONAL PARAMETERS:%%       NP:     order of the prediction filter%       N:      # of samples in one 20ms segment which has been sampled a%               8000Hz%       G:      Gain of the discrete-time prediction filter%       ALPH:   vector of prediction filter coefficients%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%NP = 10;  	% Order of the prediction filter%----------------------------- FILL THIS OUT -----------------------------%N = 160;  	% Question 1: Number of samples in each blockX2 = [];E = [];RECON = [];SYNTH = [];%-------------------------------------------------------------------------%%   Block processing starts%for BLOCK = 1:BLOCKS    if BLOCK / 10 == floor(BLOCK/10)        fprintf('Up to block %d.\n',BLOCK);    end    [ALPH, G] = compute_alpha(X1, N, NP, BLOCK);%% Filtering to obtain the estimated, error, reconstructed, and % synthesized signals.%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%The Estimated Wave%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% This code is given as example given to you for the future parts you will% be filling out% coefficient bs are for input    b=[0 ALPH];    a=1;% Determines current block of the input signal	S=X1(1 +(BLOCK - 1)* N:BLOCK * N);	S=S';%% Using b,a filter to obtain estimation%    if BLOCK==1        [Y,Zf]=filter(b,a,S);        % No initial conditions available for 	else                           % the first block.        [Y,Zf]=filter(b,a,S,Zi);    end	X2 = [X2 Y];     % Add current segment to previously filtered segments.	Zi=Zf;		 % Update the initial conditions.%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%The Error Wave: use the code for the estimated wave as a model!%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	1.  Determine the vectors a and b for the coefficients of the%	    Prediction error filter.  Recall that in the Prediction%	    Error Filter the original signal, X1, is used as the input,%	    and the output is the error signal, E.%%	2.  Remember to account for the initial conditions that are%	    needed for the filtering of each block. %%	3.  Keep in mind that you want your FINAL filtered signal to be of the%	    same length as the orignal signal.%%	4.  BE CAREFUL WHEN CHOOSING YOUR VARIABLE NAMES!!%% FILL THIS OUT    b=[1 -1*ALPH];    a= 1;% Using b,a filter to obtain estimation%    if BLOCK==1        [E_b,Rf]=filter(b,a,S);        % No initial conditions available for 	else                           % the first block.        [E_b,Rf]=filter(b,a,S,Ri);    end	E = [E E_b];     % Add current segment to previously filtered segments.	Ri=Rf;		 % Update the initial conditions.%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% The Reconstructed Wave%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	1. Repeat the steps used to produce the ERROR wave.  Recall:%	   that in the Reconstruction Filter the error signal,E, is used%	   as the input, and the reconstructed wave, RECON, is the %	   output of the filter.%%	2. Keep in mind that filtering is being done on only ONE %	   SEGMENT of the wave.% Using b,a filter to obtain estimation    b= 1;    a=[1 -1*ALPH];    % The input is E_b, the error block from the previous loop and the output% is the constructed sound output for the specific block    if BLOCK==1        [Y,Tf]=filter(b,a,E_b);        % No initial conditions available for 	else                           % the first block.        [Y,Tf]=filter(b,a,E_b,Ti);    end	SYNTH = [SYNTH Y];     % Add current segment to previously filtered segments.	Ti=Tf;		 % Update the initial conditions.     %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% The Synthesized Wave%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	1.  Repeat the steps used to create both the error wave and the%	    reconstructed wave.  Recall:  the periodic impulse train%	    excitation is the input to the synthesis filter, and%	    the synthesized wave, SYNTH, is the output.%%	2.  Be sure to include the effects of the gain, G, in your %	    determination of the filter coefficients.%% Define the a and b vectors. The input is an impulse train for voiced and% white noise for unvoiced.    b=G;    a=[1 -1*ALPH];    if BLOCK==1        [Y,Uf]=filter(b,a,E1);        % No initial conditions available for 	else                           % the first block.        [Y,Uf]=filter(b,a,E1,Ui);    end	RECON = [RECON Y];     % Add current segment to previously filtered segments.	Ui=Uf;		 % Update the initial conditions.%end